{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gbAc8MXQtYBt"
      },
      "source": [
        "The dataset *penguins* contains a study of the penguin species that inhabit different islands of Antarctica. <br>\n",
        "\n",
        "Researchers have a few questions about penguins:\n",
        "- Can we distinguish the sex of the animals from the rest of the data?\n",
        "- Is the island decisive when it comes to the physical development of penguins?\n",
        "- Are we able to distinguish penguins from one island or another?\n",
        "- Could we identify the species with physiological data?\n",
        "\n",
        "\n",
        "To answer these questions and more, it is necessary to do an **exploratory analysis** of the data provided in the dataset and process it in order to obtain answers and extract enough knowledge to make decisions.."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "Pcw4X2UjtLfo"
      },
      "outputs": [],
      "source": [
        "# Load libraries\n",
        "import seaborn as sns\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "pd.options.mode.chained_assignment = None  # default='warn'"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "k_1NBFLjkduM"
      },
      "source": [
        "## Load data with pandas"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_7fMPXSGvMHr",
        "outputId": "dc41f3a4-2af0-4856-e9e7-1df8b6773adc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Variable type:  <class 'pandas.core.frame.DataFrame'>\n"
          ]
        }
      ],
      "source": [
        "#Create a data frame from the file separated by \",\"\n",
        "#penguins = pd.read_csv('penguins_antarctica.csv', sep=',')  \n",
        "penguins = sns.load_dataset(\"penguins\")\n",
        "\n",
        "print(\"Variable type: \", type(penguins))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z1ooIuMKyCj_"
      },
      "source": [
        "There are few samples with null values, so a priori, if we eliminate them we will not have problems. Few samples do not affect the representativeness of the data."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NIWQaP9zyMF3",
        "outputId": "3b1cd3a1-962e-43b1-9d26-4a71cf6ae0a2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of registers without nulls:  333\n"
          ]
        }
      ],
      "source": [
        "# We remove null records with the .dropna() function\n",
        "penguins_clean = penguins.dropna()\n",
        "\n",
        "# We ensure how many final samples we have\n",
        "print(\"Number of registers without nulls: \", len(penguins_clean))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "U3gTOQdt2VSO"
      },
      "outputs": [],
      "source": [
        "# We are going to select only the Adelie species\n",
        "penguins_adelie = penguins_clean[penguins_clean.species == \"Adelie\"]\n",
        "print(\"Penguins from Adelie specie: \", len(penguins_adelie))\n",
        "penguins_adelie.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fmJU_O8HHpWh"
      },
      "source": [
        "# Clustering\n",
        "We will try to validate if we are able to identify sex of Adelie specie using the island and the physiological data."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "87RqxA9lQC8o"
      },
      "outputs": [],
      "source": [
        "from sklearn.cluster import KMeans\n",
        "from sklearn.metrics import confusion_matrix,classification_report,accuracy_score\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "91m6ojr2QDVN"
      },
      "outputs": [],
      "source": [
        "penguins_adelie_num = penguins_adelie.copy()\n",
        "penguins_adelie_num['island'] = penguins_adelie_num['island'].replace(['Biscoe', 'Dream', 'Torgersen'], [0, 1, 2])\n",
        "penguins_adelie_num['species'] = penguins_adelie_num['species'].replace(['Adelie', 'Chinstrap', 'Gentoo'], [0, 1, 2])\n",
        "penguins_adelie_num['sex'] = penguins_adelie_num['sex'].replace(['Female', 'Male'], [0, 1])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pEyhR1VqQdDs",
        "outputId": "038994f6-892b-4dc0-93f0-b392db5d2a44"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[66  7]\n",
            " [13 60]]\n"
          ]
        }
      ],
      "source": [
        "kmeans = KMeans(2, init='k-means++', n_init=100)\n",
        "original_sex = penguins_adelie_num.sex\n",
        "penguins_no_sex = penguins_adelie_num.drop('sex', axis=1)\n",
        "kmeans.fit(penguins_no_sex)\n",
        "print(confusion_matrix(original_sex, kmeans.labels_))\n",
        "#clusters identified will be in the x-axis (number of cluster can be different to class name)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZztcuAHrQitJ",
        "outputId": "b33be04a-6952-4756-d145-ff7c23863d51"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy is  86.3 %\n"
          ]
        }
      ],
      "source": [
        "print(\"Accuracy is \", np.round(100*accuracy_score(original_sex, kmeans.labels_), 2), \"%\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8nif46RDQlh2"
      },
      "outputs": [],
      "source": [
        "#More visually\n",
        "sns.heatmap(confusion_matrix(original_sex,kmeans.labels_),annot=True,cmap=\"Blues\",fmt=\"d\",cbar=False, annot_kws={\"size\": 24});"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Z_yQNTyku3ab"
      },
      "source": [
        "Analyze the clusters from the attributes point of view"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "id": "h-TrsalivGzW"
      },
      "outputs": [],
      "source": [
        "# Add cluster to data frame\n",
        "penguins_adelie_num['cluster'] = kmeans.labels_"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "uxtw5Mn8uxWO"
      },
      "outputs": [],
      "source": [
        "fig,axes=plt.subplots(2,2,figsize=(20,10))\n",
        "sns.boxplot(data = penguins_adelie_num, x='cluster', y=\"body_mass_g\", ax=axes[0, 0])\n",
        "sns.boxplot(data = penguins_adelie_num, x='cluster',  y=\"flipper_length_mm\", ax=axes[0, 1])\n",
        "sns.boxplot(data = penguins_adelie_num, x='cluster',  y=\"bill_length_mm\", ax=axes[1, 0])\n",
        "sns.boxplot(data = penguins_adelie_num, x='cluster',  y=\"bill_depth_mm\", ax=axes[1, 1])\n",
        "plt.tight_layout()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oqYxQDYCSgnh"
      },
      "source": [
        "Using only the attribute most correlated with sex"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "-HX8_QHySeys"
      },
      "outputs": [],
      "source": [
        "penguins_adelie_filt = penguins_adelie[['body_mass_g','sex']]\n",
        "penguins_adelie_num = penguins_adelie_filt.copy()\n",
        "penguins_adelie_num['sex'] = penguins_adelie_filt['sex'].replace(['Female', 'Male'], [0, 1])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DJikcuZASqh2",
        "outputId": "70f858e1-f3b6-4177-fbfe-d2d524de1106"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[66  7]\n",
            " [13 60]]\n"
          ]
        }
      ],
      "source": [
        "kmeans = KMeans(2, init='k-means++', n_init=100)\n",
        "original_sex = penguins_adelie_num.sex\n",
        "penguins_no_sex = penguins_adelie_num.drop('sex', axis=1)\n",
        "kmeans.fit(penguins_no_sex)\n",
        "print(confusion_matrix(original_sex, kmeans.labels_))\n",
        "#clusters identified will be in the x-axis (number of cluster can be different to class name)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D-M1oNVMSsgM",
        "outputId": "d2008669-04f7-4535-e56b-7abcf8d2bf25"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy is  13.7 %\n"
          ]
        }
      ],
      "source": [
        "print(\"Accuracy is \", np.round(100*accuracy_score(original_sex, kmeans.labels_), 2), \"%\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "EHCl9b_vSupT"
      },
      "outputs": [],
      "source": [
        "#More visually\n",
        "sns.heatmap(confusion_matrix(original_sex,kmeans.labels_),annot=True,cmap=\"Blues\",fmt=\"d\",cbar=False, annot_kws={\"size\": 24});"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "q_rxT7AmTkyU"
      },
      "source": [
        "There is no important difference in the results, so we can use only attribute *body_mass_g* to identify sex of Adelie penguins."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "SIGxNdgntinV"
      },
      "outputs": [],
      "source": [
        "penguins_adelie['cluster'] = kmeans.labels_"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JY1AQTmstqdL"
      },
      "outputs": [],
      "source": [
        "fig,axes=plt.subplots(2,2,figsize=(20,10))\n",
        "sns.boxplot(data = penguins_adelie, x='cluster', y=\"body_mass_g\", ax=axes[0, 0])\n",
        "sns.boxplot(data = penguins_adelie, x='cluster',  y=\"flipper_length_mm\", ax=axes[0, 1])\n",
        "sns.boxplot(data = penguins_adelie, x='cluster',  y=\"bill_length_mm\", ax=axes[1, 0])\n",
        "sns.boxplot(data = penguins_adelie, x='cluster',  y=\"bill_depth_mm\", ax=axes[1, 1])\n",
        "plt.tight_layout()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "id": "NCVaTELKtfq8"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.13"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}